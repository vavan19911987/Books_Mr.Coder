"use strict";

//"Математические методы в JavaScript Работа со степенью и корнем"

// Возведите 2 в 10 степень.
// console.log(Math.pow(2, 10));

// Найдите квадратный корень из 245.
// console.log(Math.sqrt(245));

// Дан следующий массив:
//     Найдите квадратный корень из суммы кубов его элементов. Для решения воспользуйтесь циклом for.
//     [4, 2, 5, 19, 13, 0, 10]

// let arr = [4, 2, 5, 19, 13, 0, 10];
// let cube = 0;
// let sumCube = 0;
// for (let i = 0; i < arr.length; i++) {
//     cube = arr[i] * 2;
//     sumCube += cube;
// }
// console.log(Math.sqrt(sumCube));

// Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
// console.log(Math.sqrt(379));
// console.log(Math.round(Math.sqrt(379)));
// console.log(Math.ceil(Math.sqrt(379)));
// console.log(Math.floor(Math.sqrt(379)));
// console.log(Math.sqrt(379).toFixed(2));
// console.log(Math.sqrt(379).toPrecision(3));

// Найдите квадратный корень из 587. Округлите результат в большую и меньшую стороны,
//     запишите результаты округления в объект с ключами 'floor' и 'ceil'.

// let a = Math.sqrt(584);
// let floor = Math.floor(a);
// let ceil = Math.ceil(a);
// let obj = {};
// obj['floor'] = floor;
// obj['ceil'] = ceil;
//
// console.log(obj);

// Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
// console.log(Math.max(4, -2, 5, 19, -130, 0, 10));
// console.log(Math.min(4, -2, 5, 19, -130, 0, 10));

// Выведите на экран случайное целое число от 1 до 100.

// function mathRandom(min, max) {
//     return Math.floor(Math.random() * (max - min + 1)) + min;
// }
//
// console.log(mathRandom(10,100));

// С помощью цикла заполните массив 10-ю случайными целыми числами.
// let arr = [];
// for (let i = 0; i < 9; i++) {
//     arr[i] = Math.floor(Math.random() * 20);
//     arr.push(arr[i]);
// }
// console.log(arr);

// Даны переменные a и b. Найдите модуль разности a и b.
// Проверьте работу скрипта самостоятельно для различных a и b.

// let a = 2;
// let b = 4;
// let c = a - b;
// console.log(c);
// console.log(Math.abs(c));

// Дана строка 'abcde'. Определите позицию буквы 'c' в этой строке.
//  let str = 'abcde';
// console.log(str.indexOf('c'));

// Дана строка. Проверьте, есть ли в этой строке символ 'a'.
// let str = 'http// abcde';
// console.log(str.indexOf('abcde'));

// Дана строка. Проверьте, начинается ли эта строка на 'http://'.

// let str = 'http// abcde';
// console.log(str.startsWith('http//'));

// Дана строка. Проверьте, заканчивается ли эта строка на '.html'.
// let str = 'http// abcde .html';
// console.log(str.endsWith('.html'));
// Пример
// Пусть дана некоторая строка с дефисами. Давайте разобьем эту строку в массив по разделителю '-':
//
// let str = 'html-css-javascript';
// let arr = str.split('-');
//
// console.log(arr);
// Результат выполнения кода:
//
//     ['html', 'css', 'javascript']
// Пример
// Давайте опять разобьем строку по разделителю '-', однако вторым
// параметром укажем максимальное количество элементов в получившемся массиве, например, 2.
//
// В этом случае в массив запишется только 2 элемента:
//
//     let str = 'html-css-javascript';
// let arr = str.split('-', 2);
//
// console.log(arr);
// Результат выполнения кода:
//
//     ['html', 'css']
// Пример
// Давайте каждый символ строки запишем в отдельный элемент массива:
//
//     let str = 'abcde';
// let arr = str.split('');
//
// console.log(arr);
// Результат выполнения кода:
//
//     ['a', 'b', 'c', 'd', 'e']
// Пример
// Давайте первые 3 символа строки запишем в отдельный элемент массива:
//
//     let str = 'abcde';
// let arr = str.split('', 3);
//
// console.log(arr);
// Результат выполнения кода:
//
//     ['a', 'b', 'c']
// Пример
// Сейчас с помощью split разбивается строка с числами. Обратите внимание на то,
// что в результате получится массив строк ['1', '2', '3', '4', '5'], а не массив чисел [1, 2, 3, 4, 5]:
//
// let str = '12345';
// let arr = str.split('');
//
// console.log(arr);
// Результат выполнения кода:
//
//     ['1', '2', '3', '4', '5']
// Пример . Применение
// Давайте перевернем символы строки в обратном порядке. Для этого разобьем строку
// в массив с помощью split по разделителю '' (это разместит каждый символ строки в
// отдельный элемент массива), перевернем этот массив с помощью reverse и затем сольем
// перевернутый массив обратно с помощью join:
//
//     let str    = '123456789';
// let arr1   = str.split('');
// let arr2   = arr1.reverse();
// let result = arr2.join('');
//
// console.log(result);
// Результат выполнения кода:
//
//     '987654321'
// Пример . Применение
// Упростим решение предыдущей задачи - сольем все команды в цепочку:
//
//     let str = '123456789';
//
// let result = str.split('').reverse().join('');
// console.log(result);
// Результат выполнения кода:
//
//     '987654321'
// Пример . Применение
// Дана строка с цифрами. Найдем сумму цифр из этой строки.
// Для этого разобьем строку в массив, а затем переберем этот массив и найдем его сумму.
// Нас ждет подвох: split возвращает строки, поэтому при суммировании преобразуем эти цифры-строки в
// настоящие числа с помощью Number:
//
//     let str = '12345';
// let arr = str.split('');
// let sum = 0;
//
// for (let i = 0; i < arr.length; i++) {
//     sum += Number(arr[i]);
// }
//
// console.log(sum);
// Результат выполнения кода:
//
//     15
// Пример . Применение
// Дано число. Давайте запишем каждую цифру этого числа в отдельный элемент массива.
// Тут есть подвох - split применяется только к строкам, а у нас число.
// Преобразуем вначале число к строке с помощью String, а затем применим split:
//
//     let num = 12345;
// let str = String(num);
// let arr = str.split('');
//
// console.log(arr);
// Результат выполнения кода:
//
//     ['1', '2', '3', '4', '5']

// Дана строка '1-2-3-4-5'. С помощью метода split запишите каждое число этой строки в отдельный элемент массива.

// let str =  '1-2-3-4-5-6';
// let arr = str.split('-');
// console.log(arr);

// Дана строка '12345'. С помощью метода split запишите каждый символ этой строки в отдельный элемент массива.
// let str = '12345';
// let arr = str.split('', 3);
// console.log(arr);

// let arr = [1, 2, 3, 4, 5];
// let str = arr.join();
// console.log(str);

// Дан следующий массив:
//     [1, 2, 3]
// Выведите на экран первый элемент этого массива.

// let arr = [1,2,3,];
// let shift = arr.shift();
// console.log(shift);

// Дан следующий массив:
//     [1, 2, 3]
// Выведите на экран последний элемент этого массива.

// let arr = [1,2,3,4];
// let pop = arr.pop();
// console.log(pop);

// let str = '12345'; пробы
// let str2 = '678910';
// let arr = str.split('');
// arr.push(str2);
// console.log(arr);

// Дан следующий массив:[1, 2, 3, 4, 5]
// Сделайте из этого массива следующий:[1, 2, 3]

// let arr = [1, 2, 3, 4, 5];
// let arr2 = arr.slice(0, - 2);
// console.log(arr2);

// Дан следующий массив:[1, 2, 3, 4, 5]
// Используя этот массив, запишите в новую переменную следующий массив:[4, 5]
// let arr = [1, 2, 3, 4, 5];
// let arr2 = arr.slice(3);
// console.log(arr2);

// Дан следующий массив:[1, 2, 3, 4, 5]
// С помощью метода splice преобразуйте массив в следующий:[1, 4, 5]
// let arr = [1, 2, 3, 4, 5];
// let arr2 = arr.splice(1,2);
// console.log(arr);
// С помощью метода splice сделайте из него массив:[1, 2, 3, 'a', 'b', 'c', 4, 5]
// let arr = [1, 2, 3, 4, 5];
// let arr2 = arr.splice(3, 0,'a','b','c');
// console.log(arr);
// Дан следующий массив    [1, 2, 3, 4, 5]
// С помощью метода splice сделайте из него массив:[1, 'a', 'b', 2, 3, 4, 'c', 5, 'e']
// let arr = [1, 2, 3, 4, 5];
// let arr2 = arr.splice(-4, 4, 'a', 'b', 2, 3, 4, 'c', 5, 'e');
// console.log(arr);

// Дан следующий массив:[1, 2, 3, 4, 5]
// Найдите позицию числа 3 в этом массиве.
// let arr = [1, 2, 3, 4, 5];
// console.log(arr.indexOf(4));

// Дан следующий массив:[1, 2, 3, 4, 5]Проверьте, есть ли в этом массиве число 3.
// let arr = [1, 2, 3, 4, 5];
// let result = arr.includes(3);
// console.log(result);







